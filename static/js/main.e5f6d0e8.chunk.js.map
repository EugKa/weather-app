{"version":3,"sources":["components/city-card/index.module.scss","pages/main/index.module.scss","components/input/index.tsx","components/header/index.tsx","api.ts","store/features/current-weather/current-weather-slice.ts","store/features/hourecast-weather/housecast-weather-slice.ts","store/hooks.ts","components/form/index.tsx","components/progress/index.tsx","components/city-card/index.tsx","utils/time-conveert.ts","components/city-full-info/index.tsx","components/eighth-day-forecast/index.tsx","components/not-found/index.tsx","components/alert/index.tsx","pages/main/main.tsx","pages/city-info/index.tsx","App.tsx","store/index.ts","index.tsx","components/city-full-info/index.module.scss","components/form/index.module.scss","components/header/index.module.scss","components/eighth-day-forecast/index.module.scss"],"names":["module","exports","Input","forwardRef","ref","label","error","props","TextField","id","message","helperText","variant","Header","className","styles","header","wrapper","to","link","htag","URL","fetchHourCastWeather","lat","lon","a","fetch","process","response","json","data","console","log","fetchCurrentWeather","city","parallelCall","promises","map","then","Promise","all","CurrentWeatherThunk","createAsyncThunk","api","ParallelWeatherThunk","UpdateCurrentWeatherThunk","deleteCountryAction","createAction","CurrentWeatherSlice","createSlice","name","initialState","CurrentData","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","filter","item","main","weather","existingPost","find","description","temp","feels_like","temp_min","temp_max","selectCurrentWeather","CurrentWeatherData","selectCurrentWeatherStatus","HourCastWeatherThunk","HourCastWeatherSlice","HourecastData","selectHourCastWeather","selectHourCastWeatherStatus","useAppDispatch","useDispatch","useAppSelector","useSelector","AddCityForm","useForm","register","handleSubmit","errors","formState","reset","dispatch","AddCity","Card","card","form","onSubmit","formData","formWrapper","required","value","Button","btn","color","type","Progress","Box","sx","display","CircularProgress","CityCard","handleDelete","handleSelect","handleUpdate","sys","country","imgWrapper","CardMedia","height","component","image","icon","Math","floor","onClick","coord","convertToDWMD","dt","offset","moment","unix","utc","add","format","capitalizeFirstLetter","text","charAt","toUpperCase","slice","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","palette","secondary","CityFullInfo","num","current","timezone_offset","params","todayList","info","infoText","wind_speed","pressure","humidity","uvi","dew_point","visibility","EighthDayForecast","min","max","eighthDayForecast","NotFound","CustomAlert","children","Stack","width","Alert","severity","MainPage","history","useHistory","localStorage","removeItem","push","pathname","search","keys","Object","useEffect","noData","length","flexGrow","Grid","container","cardWrapper","setItem","lg","md","sm","xs","cod","CityInfo","location","useLocation","queryString","parse","daily","hourly","currentDay","dateTime","parseInt","getCurrentDay","filtTodayWeather","el","time","getDateAndOffset","dataLine","labels","labe","datasets","fill","borderColor","match","App","exact","path","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5f6d0e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"city-card_card__38qCF\",\"imgWrapper\":\"city-card_imgWrapper__358PZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"main_mainPage__1fXDM\",\"noData\":\"main_noData__1aq1H\",\"noDataIcon\":\"main_noDataIcon__3fzoL\"};","import React, { ForwardedRef, forwardRef } from 'react'\nimport {TextField} from '@mui/material';\n// import styles from './index.module.scss';\nimport { FieldError } from \"react-hook-form\";\n\ninterface InputProps {\n    error: FieldError;\n    variant?: string;\n    label?: string;\n    id?: string;\n    defaultValue?: string;\n    helperText?: string;\n}\n\nexport const Input = forwardRef(({ label, error, ...props }: InputProps, ref: ForwardedRef<HTMLInputElement>) => {\n    return (\n        <TextField\n            ref={ref}\n            // className={styles.input}\n            error={error ? true : false}\n            id={error ? \"outlined-error-helper-text\" : \"outlined-basic\"}\n            label={error ? error.message: label}\n            helperText={error ? \"Required field.\" : \"\"}\n            {...props}\n            variant=\"outlined\"\n        />\n    )\n})","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport styles from './index.module.scss'\n\nexport const Header = () => {\n    return (\n        <header className={styles.header}>\n            <div className={styles.wrapper}>\n                <Link to='/' className={styles.link}>\n                    <h3 className={styles.htag}>\n                        Home\n                    </h3> \n                </Link>\n            </div>\n        </header>\n    )\n}","const URL = 'https://api.openweathermap.org/data/2.5'\n\nexport async function fetchHourCastWeather(lat:  number, lon: number) {\n    try {\n        const response = await fetch(`${URL}/onecall?lat=${lat}&lon=${lon}&exclude=minutely&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.log(error);       \n    }\n}\n\nexport async function fetchCurrentWeather(city: string) {\n    try {\n        const response = await fetch(`${URL}/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`\n        );\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.log(error);       \n    }\n}\n\nexport async function parallelCall(city: string[]) {\n    try {\n        const promises = city.map((city) =>\n            fetch(`${URL}/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`).then((response) => response.json())\n        );\n        const data = await Promise.all(promises);\n        return data;\n    } catch (error) {\n        console.log(error);     \n    }\n}\n","import { createAction, createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport type { RootState } from '../../index';\nimport * as api from '../../../api'\nimport { CurrentData } from '../../../interface';\n\ninterface dataState {\n  CurrentData: CurrentData[];\n  status: string;\n  error?: boolean;\n}\n\nconst initialState: dataState = {\n  CurrentData: [],\n  status: 'idle',\n  error: false\n}\n\nexport const CurrentWeatherThunk = createAsyncThunk(\n  \"@@CurrentWeather/fetchData\",\n  async (city: string) => {\n      const data = await api.fetchCurrentWeather(city);\n      return data;\n  }\n);\n\nexport const ParallelWeatherThunk = createAsyncThunk(\n  \"@@CurrentWeather/parallel\",\n  async (city: string[]) => {\n      const data:any = await api.parallelCall(city);\n      return data;\n  }\n);\n\nexport const UpdateCurrentWeatherThunk = createAsyncThunk(\n  \"@@CurrentWeather/Update\",\n  async (props: any) => {\n    const { city } = props;\n    const data = await api.fetchCurrentWeather(city);\n    return data;\n  }\n);\n    \nexport const deleteCountryAction = createAction<number>('@@WCurrentWeather/delete')\n\nexport const CurrentWeatherSlice = createSlice({\n    name: '@@CurrentWeather',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n      builder.addCase(CurrentWeatherThunk.pending, (state) => {\n        state.status = 'loading';\n      })\n      builder.addCase(CurrentWeatherThunk.fulfilled, (state, action) => {\n        state.status = 'successed';\n        state.CurrentData = [...state.CurrentData, action.payload]\n      })    \n      builder.addCase(CurrentWeatherThunk.rejected, \n        (state) => {\n        state.status = 'failed';\n        state.error = true;\n      });\n\n      builder.addCase(deleteCountryAction, (state, action) => {\n        state.CurrentData = state.CurrentData.filter(item => item.id !== action.payload)\n      })\n      ///\n      builder.addCase(UpdateCurrentWeatherThunk.pending, (state) => {\n        state.status = 'loading';\n      })\n      builder.addCase(UpdateCurrentWeatherThunk.fulfilled, (state, action) => {\n        state.status = 'successed';\n        const { name, id, main, weather } = action.payload;\n        let existingPost = state.CurrentData.find((item) => item.id === id || item.name === name);\n        if(existingPost) {\n          existingPost.weather[0].main = weather[0].main;\n          existingPost.weather[0].description = weather[0].description;\n          existingPost.main.temp = main.temp;\n          existingPost.main.feels_like = main.feels_like;\n          existingPost.main.temp_min = main.temp_min;\n          existingPost.main.temp_max = main.temp_max;\n        }\n      })\n      builder.addCase(UpdateCurrentWeatherThunk.rejected, \n        (state) => {\n        state.status = 'failed';\n        state.error = true;\n      });\n      ///Parallel Call\n      builder.addCase(ParallelWeatherThunk.pending, (state) => {\n        state.status = 'loading';\n      })\n      builder.addCase(ParallelWeatherThunk.fulfilled, (state, action) => {\n        state.status = 'successed';\n        state.CurrentData = action.payload\n      })    \n      builder.addCase(ParallelWeatherThunk.rejected, \n        (state) => {\n        state.status = 'failed';\n        state.error = true;\n      });\n    }\n  })\n  \nexport const selectCurrentWeather = (state: RootState) => state.CurrentWeatherData.CurrentData;\nexport const selectCurrentWeatherStatus = (state: RootState) => state.CurrentWeatherData.status;\nexport default CurrentWeatherSlice.reducer;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport type { RootState } from '../../index';\nimport * as api from '../../../api'\n// import { IHourCastWeather } from '../../../interface';\n\ninterface dataState {\n    HourecastData: any;\n    status: string;\n    error?: boolean;\n}\n\nconst initialState: dataState = {\n    HourecastData: {},\n    status: 'idle',\n    error: false\n}\n\nexport const HourCastWeatherThunk = createAsyncThunk(\n    \"@@HourCastWeather/fetchData\",\n    async (props: any) => {\n      const { lat, lon } = props;\n      const data = await api.fetchHourCastWeather(lat, lon);\n      return data;\n    }\n);\n    \n\nexport const HourCastWeatherSlice = createSlice({\n    name: '@@HourCastWeather',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n      builder.addCase(HourCastWeatherThunk.pending, (state) => {\n        state.status = 'loading';\n      })\n      builder.addCase(HourCastWeatherThunk.fulfilled, (state, action) => {\n        state.status = 'successed';\n        state.HourecastData = action.payload\n      })    \n      builder.addCase(HourCastWeatherThunk.rejected, \n        (state) => {\n        state.status = 'failed';\n        state.error = true;\n      });\n    }\n  })\n  \nexport const selectHourCastWeather = (state: RootState) => state.HourCastWeatherSlice.HourecastData;\nexport const selectHourCastWeatherStatus = (state: RootState) => state.HourCastWeatherSlice.status;\nexport default HourCastWeatherSlice.reducer;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './index'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React from 'react'\nimport { Button, Card } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { Input } from '../input';\nimport { CurrentWeatherThunk } from '../../store/features';\nimport { useAppDispatch } from '../../store/hooks';\nimport styles from './index.module.scss'\n\ninterface AddCityFormState {\n    city: string;\n}\n\nexport const AddCityForm = () => {\n    const { register, handleSubmit, formState: { errors }, reset } = useForm<AddCityFormState>();\n    const dispatch = useAppDispatch();\n\n    const onSubmit = (formData: AddCityFormState) => {\n        dispatch(CurrentWeatherThunk(formData.city))\n        reset();\n    }\n\n    return (\n        <div className={styles.AddCity}>\n            <Card className={styles.card} variant=\"outlined\">\n                <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n                    <div className={styles.formWrapper}>\n                        <Input \n                            label=\"Please enter city name\"\n                            {...register('city', { required: { value: true, message: 'Please enter correct city name'}})} \n                            error={errors.city!}\n                        />\n                        <Button className={styles.btn} variant=\"contained\" color=\"primary\" type=\"submit\">\n                            Add City\n                        </Button>\n                    </div>\n                </form>\n            </Card>\n        </div>\n    )\n}\n","import * as React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nexport function Progress() {\n  return (\n    <Box sx={{ display: 'flex' }} className=\"main-pr\">\n      <CircularProgress />\n    </Box>\n  );\n}","import React from 'react'\nimport { Button, CardMedia } from '@mui/material'\nimport { CurrentData } from '../../interface'\nimport { Progress } from '../progress'\nimport styles from './index.module.scss'\n\ninterface CityCardProps {\n    data: CurrentData;\n    handleDelete: (id: number, city: string) => void;\n    handleSelect: (lon: number, lat: number, city: string) => void;\n    handleUpdate: (city: string, id: number) => void;\n    \n}\n\nexport const CityCard = ({data, handleDelete, handleSelect, handleUpdate}: CityCardProps) => {\n    // const { name, weather, main, id, coord, sys } = data;    \n    return (\n        <div className={styles.card}>\n            {data && data.weather ?  <>\n                <div>\n                    {data.name}, {data.sys.country}\n                </div>\n                <div className={styles.imgWrapper}>\n                    <CardMedia\n                        height={100}\n                        component=\"img\"\n                        image={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\n                    />\n                    <div>\n                        {Math.floor(data.main.temp)}℃\n                    </div>\n                </div>            \n                <div>\n                </div>\n                <Button className=\"btn-update\" onClick={() => handleUpdate(data.name, data.id)}>\n                    Update \n                </Button> \n                <Button className=\"btn-info\" onClick={() => handleSelect(data.coord.lon, data.coord.lat, data.name)}>\n                    More info \n                </Button> \n                <Button className=\"btn-delete\" onClick={() => handleDelete(data.id, data.name)}>\n                    Delete \n                </Button>\n                </> : <Progress/>\n            }\n        </div>\n    )\n}\n","import moment from \"moment\"\n\nexport function getDateAndOffset(time: number, offset: any) {\n    const dateTime = moment.unix(time).utc().add(offset, 's').format(\"D\");\n    return parseInt(dateTime);\n}\n\nexport const convertToMDHM = (dt:number, offset: number) => {\n    const humanDateFormat = moment.unix(dt).utc().add(offset, 's').format(\"MMM D, HH:mma\"); \n    return humanDateFormat;\n}\n\nexport const convertToDWMD = (dt:number, offset: number) => {\n    const humanDateFormat = moment.unix(dt).utc().add(offset, 's').format(\"ddd, MMM D\"); \n    return humanDateFormat;\n}\n\nexport const convertToDDHHmm = (dt:number, offset: number) => {\n    const dateTime = moment.unix(dt).utc().add(offset, 's').format(\"HH:mm\"); \n    return dateTime\n}\n\nexport const getCurrentDay = (dt:number, offset: number) => {\n    const dateTime = moment.unix(dt).utc().add(offset, 's').format(\"D\");\n    return parseInt(dateTime);\n}\n\nexport function capitalizeFirstLetter(text: string) {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\nexport function numFormatter(num: number) {\n    if(num > 1000){\n        return (num/1000) + 'km';\n    } else {\n        return num + 'm'\n    }\n}","import React from 'react'\nimport { Current } from '../../interface'\nimport styles from './index.module.scss'\nimport { Paper, CardMedia } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {convertToMDHM, capitalizeFirstLetter, numFormatter } from '../../utils/time-conveert';\n\n\ninterface CityFullInfoProps {\n    params: string;\n    current: Current;\n    timezone_offset: number;\n}\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\n\nexport const CityFullInfo = ({ current, timezone_offset, params }: CityFullInfoProps) => {    \n    return (\n        <Item>\n            <ul className={styles.todayList}>\n                <li>{convertToMDHM(current.dt, timezone_offset)}</li>\n                <h2>{params}</h2>\n                <ul className={styles.imgWrapper}>\n                    <CardMedia\n                        height={70}\n                        component=\"img\"\n                        image={`http://openweathermap.org/img/wn/${current.weather.map(item => item.icon)}@2x.png`}\n                    />\n                    <li>{Math.floor(current.temp)}℃</li>\n                </ul>\n                <ul className={styles.info}>\n                    <li>\n                        <span className={styles.infoText}>Feels like {Math.floor(current.feels_like)}℃.</span>\n                        <span className={styles.infoText}>{capitalizeFirstLetter(current.weather[0].description)}.</span>\n                    </li>\n                </ul>\n                <ul className={styles.info}>\n                    <li>\n                        <span className={styles.infoText}>Wind speed: {current.wind_speed}</span>\n                        <span className={styles.infoText}>Preshure: {current.pressure}hPa</span>\n                    </li>\n                    <li>\n                        <span className={styles.infoText}>Humidity: {current.humidity}%</span>\n                        <span className={styles.infoText}>UV: {current.uvi}</span>\n                    </li>\n                    <li>\n                        <span className={styles.infoText}>Dew point: {current.dew_point}℃</span>\n                        <span className={styles.infoText}>Visibility: {numFormatter(current.visibility)}</span>\n                    </li>\n                </ul>\n            </ul>\n        </Item>\n    )\n}\n","import React from 'react'\nimport { CardMedia } from '@mui/material';\nimport { Daily } from '../../interface'\nimport { convertToDWMD, capitalizeFirstLetter } from '../../utils/time-conveert'\nimport styles from './index.module.scss'\ninterface EighthDayForecastProps {\n    data: Daily;\n    offset: number;\n}\n\nexport const EighthDayForecast = ({data, offset}:EighthDayForecastProps) => {   \n    const { dt, temp:{ min, max }, weather} = data;\n    return (\n        <div className={styles.eighthDayForecast}>\n            <div>{convertToDWMD(dt, offset)}</div>{\" \"}\n            <div className={styles.imgWrapper}>\n                <CardMedia\n                    height={70}\n                    component=\"img\"\n                    image={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\n                />\n            </div>     \n            <div className={styles.text}>\n                {Math.floor(min)} / {Math.floor(max)}℃\n            </div>\n            <div className={styles.text}>{capitalizeFirstLetter(weather[0].description)}</div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            <h2>Uh oh! Something went wrond :( </h2>\n            <h2>The page you're looking for can't be found</h2>\n            <Link to=\"/\">\n                Go to Home\n            </Link>\n        </div>\n    )\n}\n","import * as React from 'react';\nimport Alert, { AlertColor } from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\ninterface CustomAlertProps {\n    type: AlertColor;\n    children: string\n}\n\nexport const CustomAlert = ({type, children}: CustomAlertProps) =>{\n  return (\n    <Stack sx={{ width: '100%' }} spacing={2}>\n      <Alert severity={type}>{children}</Alert>\n    </Stack>\n  );\n}","import React, { useEffect } from 'react'\nimport { CurrentData } from '../../interface';\nimport { \n    UpdateCurrentWeatherThunk,\n    deleteCountryAction, \n    selectCurrentWeather,\n    ParallelWeatherThunk, \n    selectCurrentWeatherStatus\n} from '../../store/features'\nimport { useAppDispatch, useAppSelector } from '../../store/hooks'\nimport styles from './index.module.scss'\nimport { AddCityForm, CityCard, CustomAlert } from '../../components';\nimport { Grid, Paper, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useHistory } from 'react-router';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\n\nexport const MainPage = (props: any) => {\n    const data: CurrentData[] = useAppSelector(selectCurrentWeather);\n    const status = useAppSelector(selectCurrentWeatherStatus);\n    const dispatch = useAppDispatch();\n    const history = useHistory();\n\n    const handleDelete = (id: number, city: string) => {\n        dispatch(deleteCountryAction(id))\n        localStorage.removeItem(city);\n\n    }\n\n    const handleSelect = (lon: number, lat: number, city: string) => {\n        history.push({\n            pathname: `/city/${city}`,\n            search: `lat=${lat}&lon=${lon}`,\n        })       \n    }\n\n    const handleUpdate = (city: string, id: number) => {\n        dispatch(UpdateCurrentWeatherThunk({\n            id: id,\n            city: city\n        }))\n    }\n\n    let keys = Object.keys(localStorage);\n\n    useEffect(() => {\n        dispatch(ParallelWeatherThunk(keys))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    if(status === 'reject') return <CustomAlert type=\"error\">\n        Uh oh! Something went wrong. Please try again later\n    </CustomAlert>\n\n    const noData = data.length === 0 && (<div>No Data</div>\n\n    )\n\n    return (\n        <Box sx={{ flexGrow: 1}}>\n            <AddCityForm/>\n            {noData}\n            <Grid container className={styles.cardWrapper} spacing={2}>\n                {data.map((item:CurrentData) => {\n                    localStorage.setItem(item.name, item.name)\n                    return <Grid item key={item.id}  lg={2} md={2} sm={6} xs={12}>\n                        {item.cod === 200 ? \n                            (\n                                <Item className='city-item'>\n                                    <CityCard \n                                        data={item} \n                                        handleDelete={handleDelete}\n                                        handleSelect={handleSelect}\n                                        handleUpdate={handleUpdate}\n                                    />\n                                </Item>              \n                            ) : (\n                                <CustomAlert type=\"error\">\n                                    \"Uh oh! Something went wrong :(\"\n                                    \"Please try again later\"\n                                </CustomAlert>\n                     )\n                        }    \n                </Grid>\n                })}\n            </Grid>          \n        </Box>\n    )\n}\n","import React, { useEffect } from 'react';\nimport queryString from 'query-string';\nimport { RouteComponentProps } from 'react-router';\nimport { useLocation } from 'react-router-dom';\nimport { IHourCastWeather, Hourly, Daily } from '../../interface';\nimport { HourCastWeatherThunk, selectHourCastWeather, selectHourCastWeatherStatus } from '../../store/features';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { convertToDDHHmm, getDateAndOffset, getCurrentDay } from '../../utils/time-conveert';\nimport { Progress, EighthDayForecast, CityFullInfo, CustomAlert } from '../../components';\nimport { Grid, Paper, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Line } from 'react-chartjs-2'\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\n\ninterface MatchParams {\n    name: string;\n}\n\ninterface CityInfoProps extends RouteComponentProps<MatchParams> {\n}\n\nexport const CityInfo = (props:CityInfoProps) => {\n    const location = useLocation();\n    const {lon ,lat} = queryString.parse(location.search);\n \n    const data: IHourCastWeather = useAppSelector(selectHourCastWeather);\n    const status = useAppSelector(selectHourCastWeatherStatus);\n    const { current, daily, hourly, timezone_offset } = data;\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(HourCastWeatherThunk({lat, lon}))\n    },[lat, lon, dispatch])\n\n    const currentDay = getCurrentDay(current && current.dt, timezone_offset);\n   \n    const filtTodayWeather = data && data.hourly ? data.hourly.filter((el: Hourly) => getDateAndOffset(el.dt, timezone_offset) === currentDay) : []\n\n    const dataLine = {\n        labels: filtTodayWeather.map((labe: Hourly) => convertToDDHHmm(labe.dt, timezone_offset)),\n        datasets: [\n          {\n            label: \"Temperature\",\n            data: filtTodayWeather.map((temp: Hourly) => Math.floor(temp.temp)),\n            fill: false,\n            borderColor: \"#742774\"\n          }\n        ]\n    };\n    \n    const renderHourlyForecast = () => {\n        return <Item>\n            <h2>Hourly forecast</h2>\n            <Line data={dataLine}/>\n        </Item>\n    }\n\n    const eighthDayForecast = () => {\n        return <Item>\n            <h2>8-Day Forecast</h2>\n            {daily.map((item:Daily) => (\n                <EighthDayForecast key={item.dt} data={item} offset={timezone_offset}/>      \n            ))}\n        </Item>\n    }\n    if(status === 'reject') return <CustomAlert type=\"error\">\n        Uh oh! Something went wrong. Please try again later\n    </CustomAlert>\n    \n    \n    return (\n        <Box sx={{flexGrow: 1}}>\n            <Grid container spacing={2}>\n                <Grid item lg={12} md={12} sm={12} xs={12}>\n                    {current ? <CityFullInfo current={current} params={props.match.params.name} timezone_offset={timezone_offset}/> : <Progress/>}\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                    {hourly ? renderHourlyForecast() : <Progress/>}\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                    {daily ? eighthDayForecast(): <Progress/>}\n                </Grid>\n            </Grid>            \n        </Box>\n    )\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport { Header, NotFound } from './components';\nimport { MainPage, CityInfo } from './pages';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Switch>\n        <Route exact component={MainPage} path='/'/>\n        <Route component={CityInfo} path='/city/:name'/>\n        <Route component={NotFound}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\n\nimport CurrentWeatherData from './features/current-weather/current-weather-slice';\nimport HourCastWeatherSlice from './features/hourecast-weather/housecast-weather-slice';\n\nexport const rootReducer = combineReducers({\n  CurrentWeatherData,\n  HourCastWeatherSlice\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todayList\":\"city-full-info_todayList__3uOjm\",\"imgWrapper\":\"city-full-info_imgWrapper__268b9\",\"info\":\"city-full-info_info__2oBi6\",\"infoText\":\"city-full-info_infoText__2ySDN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddCity\":\"form_AddCity__2RN6D\",\"form\":\"form_form__3Muto\",\"formWrapper\":\"form_formWrapper__HF6Tw\",\"card\":\"form_card__gFkKW\",\"paper\":\"form_paper__2txhl\",\"btn\":\"form_btn__1-3yM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__lQPkg\",\"wrapper\":\"header_wrapper__1u6Rv\",\"link\":\"header_link__1Ku8r\",\"htag\":\"header_htag__cW2hx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgWrapper\":\"eighth-day-forecast_imgWrapper__3oRZd\",\"eighthDayForecast\":\"eighth-day-forecast_eighthDayForecast__3CUiZ\",\"text\":\"eighth-day-forecast_text__aizPG\"};"],"sourceRoot":""}